/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type { Escrow, EscrowInterface } from "../../contracts/Escrow";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "onReview",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "value",
        type: "uint128",
      },
    ],
    name: "_increaseTokenAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "value",
            type: "uint128",
          },
        ],
        internalType: "struct Escrow.LoanReview[]",
        name: "loans",
        type: "tuple[]",
      },
    ],
    name: "_reviewLoans",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "loan",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "loan",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct Escrow.TokenLoan",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "lockedTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "lockedIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "totalLoan",
    outputs: [
      {
        internalType: "uint128",
        name: "totalLoan",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405233600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200007a5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200007191906200019b565b60405180910390fd5b6200008b816200009260201b60201c565b50620001b8565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001838262000156565b9050919050565b620001958162000176565b82525050565b6000602082019050620001b260008301846200018a565b92915050565b611f7f80620001c86000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a61461016b5780638da5cb5b14610175578063a878deac14610193578063f2fde38b146101c3578063f3fef3a3146101df5761009e565b80630774e003146100a3578063150b7a02146100d35780634a676c2d146101035780634a6d8d9b1461011f57806361c811201461013b575b600080fd5b6100bd60048036038101906100b8919061159b565b6101fb565b6040516100ca91906116a3565b60405180910390f35b6100ed60048036038101906100e89190611756565b61028f565b6040516100fa9190611819565b60405180910390f35b61011d6004803603810190610118919061187c565b61030f565b005b61013960048036038101906101349190611925565b610359565b005b61015560048036038101906101509190611972565b610654565b6040516101629190611a40565b60405180910390f35b6101736107be565b005b61017d6107d2565b60405161018a9190611a6a565b60405180910390f35b6101ad60048036038101906101a8919061159b565b6107fb565b6040516101ba9190611a94565b60405180910390f35b6101dd60048036038101906101d89190611aaf565b6108a4565b005b6101f960048036038101906101f49190611adc565b61092a565b005b6060610287600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201610bfb565b905092915050565b60008573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5cd568faddca7750a340f054209f90a67aa0cd41f5171e6e1cbed52be95b3179878787876040516102f49493929190611b89565b60405180910390a363150b7a0260e01b905095945050505050565b610317610c1c565b61035482826fffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16610ca39092919063ffffffff16565b505050565b610361610c1c565b60005b82829050811015610623573683838381811061038357610382611bc9565b5b905060a0020190506000600160008360000160208101906103a49190611aaf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008360400160208101906103f69190611aaf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160010160008460200135815260200190815260200160002090508260800160208101906104629190611bf8565b8160000160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055508260600160208101906104af9190611aaf565b8160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160000160006101000a81548160ff0219169083151502179055508260800160208101906105219190611bf8565b8260000160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661054f9190611c54565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555061059f836020013583600201610d3f90919063ffffffff16565b506106138360400160208101906105b69190611aaf565b8460800160208101906105c99190611bf8565b6fffffffffffffffffffffffffffffffff168560600160208101906105ee9190611aaf565b73ffffffffffffffffffffffffffffffffffffffff16610ca39092919063ffffffff16565b5050508080600101915050610364565b507fd181d5a287f374e422cecd1b6a33f38a5fa1d03e711f5eb178662f1a6c63090760405160405180910390a15050565b61065c6114e8565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008381526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090509392505050565b6107c6610c1c565b6107d06000610d59565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff16905092915050565b6108ac610c1c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361091e5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109159190611a6a565b60405180910390fd5b61092781610d59565b50565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600101600084815260200190815260200160002090508060000160009054906101000a900460ff166109e157600080fd5b60008160000160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161115610aa057610a9f33308360000160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e1d909392919063ffffffff16565b5b60008160000160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff166342842e0e3033866040518463ffffffff1660e01b8152600401610b1993929190611c98565b600060405180830381600087803b158015610b3357600080fd5b505af1158015610b47573d6000803e3d6000fd5b5050505060008160000160006101000a81548160ff021916908315150217905550610b7e8383600201610e9f90919063ffffffff16565b50816001016000848152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a8154906fffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050505050565b60606000610c0b83600001610eb9565b905060608190508092505050919050565b610c24610f15565b73ffffffffffffffffffffffffffffffffffffffff16610c426107d2565b73ffffffffffffffffffffffffffffffffffffffff1614610ca157610c65610f15565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c989190611a6a565b60405180910390fd5b565b60008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610ce0929190611ccf565b602060405180830381865afa158015610cfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d219190611d0d565b9050610d3984848484610d349190611d3a565b610f1d565b50505050565b6000610d51836000018360001b61102c565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e99848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610e5293929190611c98565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061109c565b50505050565b6000610eb1836000018360001b611133565b905092915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610f0957602002820191906000526020600020905b815481526020019060010190808311610ef5575b50505050509050919050565b600033905090565b60008373ffffffffffffffffffffffffffffffffffffffff1663095ea7b38484604051602401610f4e929190611d6e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610f9c8482611247565b6110265761101b848573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3866000604051602401610fd4929190611ddc565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061109c565b611025848261109c565b5b50505050565b6000611038838361130e565b611091578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611096565b600090505b92915050565b60006110c7828473ffffffffffffffffffffffffffffffffffffffff1661133190919063ffffffff16565b905060008151141580156110ec5750808060200190518101906110ea9190611e31565b155b1561112e57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016111259190611a6a565b60405180910390fd5b505050565b6000808360010160008481526020019081526020016000205490506000811461123b5760006001826111659190611e5e565b905060006001866000018054905061117d9190611e5e565b90508082146111ec57600086600001828154811061119e5761119d611bc9565b5b90600052602060002001549050808760000184815481106111c2576111c1611bc9565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480611200576111ff611e92565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611241565b60009150505b92915050565b60008060008473ffffffffffffffffffffffffffffffffffffffff16846040516112719190611f32565b6000604051808303816000865af19150503d80600081146112ae576040519150601f19603f3d011682016040523d82523d6000602084013e6112b3565b606091505b50915091508180156112e157506000815114806112e05750808060200190518101906112df9190611e31565b5b5b8015611304575060008573ffffffffffffffffffffffffffffffffffffffff163b115b9250505092915050565b600080836001016000848152602001908152602001600020541415905092915050565b606061133f83836000611347565b905092915050565b60608147101561138e57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016113859190611a6a565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516113b79190611f32565b60006040518083038185875af1925050503d80600081146113f4576040519150601f19603f3d011682016040523d82523d6000602084013e6113f9565b606091505b5091509150611409868383611414565b925050509392505050565b60608261142957611424826114a3565b61149b565b60008251148015611451575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561149357836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161148a9190611a6a565b60405180910390fd5b81905061149c565b5b9392505050565b6000815111156114b65780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051806060016040528060001515815260200160006fffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115688261153d565b9050919050565b6115788161155d565b811461158357600080fd5b50565b6000813590506115958161156f565b92915050565b600080604083850312156115b2576115b1611533565b5b60006115c085828601611586565b92505060206115d185828601611586565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61161a81611607565b82525050565b600061162c8383611611565b60208301905092915050565b6000602082019050919050565b6000611650826115db565b61165a81856115e6565b9350611665836115f7565b8060005b8381101561169657815161167d8882611620565b975061168883611638565b925050600181019050611669565b5085935050505092915050565b600060208201905081810360008301526116bd8184611645565b905092915050565b6116ce81611607565b81146116d957600080fd5b50565b6000813590506116eb816116c5565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611716576117156116f1565b5b8235905067ffffffffffffffff811115611733576117326116f6565b5b60208301915083600182028301111561174f5761174e6116fb565b5b9250929050565b60008060008060006080868803121561177257611771611533565b5b600061178088828901611586565b955050602061179188828901611586565b94505060406117a2888289016116dc565b935050606086013567ffffffffffffffff8111156117c3576117c2611538565b5b6117cf88828901611700565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611813816117de565b82525050565b600060208201905061182e600083018461180a565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61185981611834565b811461186457600080fd5b50565b60008135905061187681611850565b92915050565b60008060006060848603121561189557611894611533565b5b60006118a386828701611586565b93505060206118b486828701611586565b92505060406118c586828701611867565b9150509250925092565b60008083601f8401126118e5576118e46116f1565b5b8235905067ffffffffffffffff811115611902576119016116f6565b5b6020830191508360a082028301111561191e5761191d6116fb565b5b9250929050565b6000806020838503121561193c5761193b611533565b5b600083013567ffffffffffffffff81111561195a57611959611538565b5b611966858286016118cf565b92509250509250929050565b60008060006060848603121561198b5761198a611533565b5b600061199986828701611586565b93505060206119aa86828701611586565b92505060406119bb868287016116dc565b9150509250925092565b60008115159050919050565b6119da816119c5565b82525050565b6119e981611834565b82525050565b6119f88161155d565b82525050565b606082016000820151611a1460008501826119d1565b506020820151611a2760208501826119e0565b506040820151611a3a60408501826119ef565b50505050565b6000606082019050611a5560008301846119fe565b92915050565b611a648161155d565b82525050565b6000602082019050611a7f6000830184611a5b565b92915050565b611a8e81611834565b82525050565b6000602082019050611aa96000830184611a85565b92915050565b600060208284031215611ac557611ac4611533565b5b6000611ad384828501611586565b91505092915050565b60008060408385031215611af357611af2611533565b5b6000611b0185828601611586565b9250506020611b12858286016116dc565b9150509250929050565b611b2581611607565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000611b688385611b2b565b9350611b75838584611b3c565b611b7e83611b4b565b840190509392505050565b6000606082019050611b9e6000830187611a5b565b611bab6020830186611b1c565b8181036040830152611bbe818486611b5c565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611c0e57611c0d611533565b5b6000611c1c84828501611867565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c5f82611834565b9150611c6a83611834565b925082820190506fffffffffffffffffffffffffffffffff811115611c9257611c91611c25565b5b92915050565b6000606082019050611cad6000830186611a5b565b611cba6020830185611a5b565b611cc76040830184611b1c565b949350505050565b6000604082019050611ce46000830185611a5b565b611cf16020830184611a5b565b9392505050565b600081519050611d07816116c5565b92915050565b600060208284031215611d2357611d22611533565b5b6000611d3184828501611cf8565b91505092915050565b6000611d4582611607565b9150611d5083611607565b9250828201905080821115611d6857611d67611c25565b5b92915050565b6000604082019050611d836000830185611a5b565b611d906020830184611b1c565b9392505050565b6000819050919050565b6000819050919050565b6000611dc6611dc1611dbc84611d97565b611da1565b611607565b9050919050565b611dd681611dab565b82525050565b6000604082019050611df16000830185611a5b565b611dfe6020830184611dcd565b9392505050565b611e0e816119c5565b8114611e1957600080fd5b50565b600081519050611e2b81611e05565b92915050565b600060208284031215611e4757611e46611533565b5b6000611e5584828501611e1c565b91505092915050565b6000611e6982611607565b9150611e7483611607565b9250828203905081811115611e8c57611e8b611c25565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050919050565b600081905092915050565b60005b83811015611ef5578082015181840152602081019050611eda565b60008484015250505050565b6000611f0c82611ec1565b611f168185611ecc565b9350611f26818560208601611ed7565b80840191505092915050565b6000611f3e8284611f01565b91508190509291505056fea26469706673582212201fa52135e8b0e49ff1d10c2ec0e74a627bdea240c5693a21a9b7e3ed3e890bb564736f6c63430008180033";

type EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Escrow__factory extends ContractFactory {
  constructor(...args: EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Escrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Escrow__factory {
    return super.connect(runner) as Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Escrow {
    return new Contract(address, _abi, runner) as unknown as Escrow;
  }
}
